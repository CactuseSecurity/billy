@using billy.Config.Api
@using billy.Config.Api.Data

@inherits LayoutComponentBase
@layout MainLayout

@inject UserConfig userConfig

<Sidebar PositionLeft="true" Collapsible="false" Resizeable="false" SidebarCssClass="navbar-dark bg-dark" @bind-Width="sidebarWidth">
    <div class="mr-2 ml-2 mt-4 mb-4">
        <ul class="navbar-nav flex-column">
            <li class="nav-item px-2" data-toggle="tooltip" title="@(userConfig.GetText("network_zones"))">
                <h5>@(userConfig.GetText("network_zones"))</h5>
            </li>
            <li class="nav-item px-2">
                <NavLink class="nav-link" href="/compliance/zones/configuration">
                    <span class="oi oi-cog"></span> @(userConfig.GetText("configuration"))
                </NavLink>
            </li>
            <li class="nav-item px-2">
                <NavLink class="nav-link" href="/compliance/zones/matrix">
                    <span class="oi oi-grid-four-up"></span> @(userConfig.GetText("matrix"))
                </NavLink>
            </li>
            <li class="nav-item px-2">
                <NavLink class="nav-link" href="/compliance/zones/checks">
                    <span class="oi oi-check"></span> @(userConfig.GetText("checks"))
                </NavLink>
            </li>
        </ul>
    </div>
</Sidebar>


<div style="margin-left: @($"{sidebarWidth + 20}px");">
    @Body
</div>

@code
{
    private int sidebarWidth = 250;

    protected override void OnInitialized()
    {
        userConfig.OnChange += OnChange;
    }

    private void OnChange(Config _, ConfigItem[] __)
    {
        Task.Run(async () => await InvokeAsync(StateHasChanged));
    }
}

