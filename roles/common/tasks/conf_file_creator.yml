- block: 

  - name: fetch remote config file
    fetch:
      src: "{{ fworch_conf_file }}"
      dest: "temp_remote_config_file.json"
      flat: yes
    when: already_installed and installation_mode == "upgrade"

  - name: read config file of currently installed product
    include_vars: 
      file: "temp_remote_config_file.json"
      name: config
    when: already_installed and installation_mode == "upgrade"

  - name: remove local copy of remote config file
    file:
      state: absent
      name: "temp_remote_config_file.json"

  - name: create symlink /usr/local/fworch/etc to /etc/fworch
    file:
      src: "{{ fworch_home }}/etc"
      dest: "/etc/{{ product_name }}"
      state: link

  - name: get version of currently installed product
    set_fact: 
      old_version: "{{ config.product_version }}"
    when: already_installed and installation_mode == "upgrade"

  - name: set config values
    set_fact:
      config_json:
        product_version: "{{ product_version }}"
        fworch_home: "{{ fworch_home }}"
        dotnet_mode: "{{ dotnet_mode }}" 
        api_uri: "https://{{ api_ip_address }}:{{ api_web_port }}/api/v1/graphql"
        api_hasura_jwt_alg: "{{ api_hasura_jwt_alg }}"
        middleware_native_uri: "http://{{ middleware_hostname }}:{{ middleware_internal_port }}/"
        middleware_uri: "{{ middleware_uri }}"

  - name: create central conf file by dumping varibale as json file
    copy: 
      content: "{{ config_json | to_nice_json }}" 
      dest: "{{ fworch_conf_file }}"
    when: installation_mode == "new"

  become: yes
